WEBVTT

00:01.280 --> 00:01.810
In this app,

00:01.820 --> 00:04.550
let's create an EC2 instance and play with it.

00:05.590 --> 00:12.880
The service we need to use to create an EC2 instance is EC2, which stands for Elastic Compute Cloud.

00:12.880 --> 00:16.030
When I click on the EC2 service, you will be able to see that there are no instances currently running.

00:16.480 --> 00:21.760
Instances running: 0.

00:22.810 --> 00:24.580
Right now, I am using the Mumbai region.

00:27.910 --> 00:31.270
I am located in Hyderabad, which is very close to Mumbai, so I am choosing this region.

00:31.300 --> 00:33.030
Therefore, I am selecting the Mumbai region.

00:34.990 --> 00:38.860
You can choose any of the regions which are present here and nearer to you.

00:39.370 --> 00:44.110
However, make sure that once you choose the region, you select the same region for all the demos.

00:44.560 --> 00:46.930
So let's go ahead and pick Mumbai from here.

00:47.110 --> 00:50.020
Now, we would want to create an EC2 instance.

00:50.260 --> 00:54.670
One of the ways you can launch an EC2 instance is by clicking "Launch Instance" in here.

00:54.910 --> 00:59.830
Another approach is to go into "Instances" and click "Launch Instance" in here.

01:00.250 --> 01:05.620
Once you click "Launch Instance," you'll get a screen where you need to fill in a lot of details regarding the instance that you want to create.

01:05.620 --> 01:08.410
The first thing you need to enter here is the name.

01:12.100 --> 01:13.480
I'll call this "First EC2 Instance."

01:13.600 --> 01:15.910
"ESI to instance" seems to be a typo or a mistake.

01:18.450 --> 01:21.540
I've zoomed in a little bit so that the screen is really clear to you.

01:21.570 --> 01:28.110
The next thing that we would need to choose is something called an AMI, and an AMI is a template that

01:28.110 --> 01:29.730
contains the software configuration.

01:29.730 --> 01:34.470
Basically, it determines the operating system you would like to use and the applications you want to

01:34.470 --> 01:36.570
install on your instance.

01:37.170 --> 01:40.710
There is a wide variety of images provided by AWS.

01:41.940 --> 01:47.520
What we'll do is we'll pick up an Amazon Linux AMI, which is the default image suggested, and I'll choose

01:47.520 --> 01:51.540
Amazon Linux 2 AMI, which is the default one suggested here.

01:51.600 --> 01:54.300
You can also see that this is free tier eligible.

01:55.290 --> 01:58.710
So let's choose the default AMI suggested here.

01:59.070 --> 02:02.040
The next thing you need to choose is the instance type.

02:02.880 --> 02:08.700
The AMI is all about software, and instance type is all about hardware.

02:09.030 --> 02:12.260
What kind of hardware do you want on your EC2 instance?

That's what we are choosing when we are choosing an instance type.

02:15.870 --> 02:20.340
If you click this dropdown here, you'll see that there are a wide variety of instance types that

02:20.340 --> 02:21.600
are available in blue.

02:21.630 --> 02:27.360
As you can see, each of these instance types has a different amount of memory, a different number of

02:27.550 --> 02:30.240
CPUs, and they have different pricing.

02:30.540 --> 02:35.010
For now, I will choose the default one, which is suggested, which is t2.micro.

02:35.040 --> 02:39.360
This comes with one virtual CPU and one gig of memory.

02:39.870 --> 02:42.840
And as you can see here, it is free for eligible users as well.

02:44.830 --> 02:47.350
The next thing that we need to choose is the key pair.

02:47.740 --> 02:54.040
You'll want to securely connect to your EC2 instance, and the way you can securely connect to these instances

02:54.040 --> 02:55.630
is by making use of a key pair.

02:56.320 --> 02:59.500
What we're doing here is creating a new key pair.

02:59.680 --> 03:09.640
So, I'll create a new key pair and name it "ec2-default." Then, I'll click "Create Key Pair."

03:13.370 --> 03:17.030
Once you create a key pair, it will also be downloaded onto your local machine.

03:17.390 --> 03:21.920
Make sure that you store the key pair securely because anyone who has the key pair will be able to connect

03:21.920 --> 03:23.510
to your EC2 instance.

03:23.870 --> 03:26.240
I'll name it "I Love" and download the key pair.

03:27.690 --> 03:31.530
Here, you can see that the "ec2-default" key pair is chosen by default.

03:31.830 --> 03:33.030
That looks good.

03:33.810 --> 03:36.930
The next thing we need to configure is the network settings.

03:37.470 --> 03:41.340
As part of these network settings, one of the most important things we need to configure is a security group.

03:41.370 --> 03:42.990
A security group is a firewall.

03:45.930 --> 03:51.240
Basically, you can control what traffic is allowed into your instance and what traffic can go out from your EC2 instance.

03:51.240 --> 03:53.490
What we are doing here is creating a new security group, and what I want to do is allow SSH traffic from anywhere.

03:59.940 --> 04:01.620
Whenever I want to connect to the EC2 instance, I need to SSH into it.

04:01.740 --> 04:06.060
So I only want to allow SSH into my EC2 instance.

04:09.810 --> 04:13.230
That's the only thing I'm allowing as part of my security group.

04:15.500 --> 04:20.930
The last thing we need to configure is the storage that needs to be attached to my EC2 instance.

04:21.800 --> 04:24.050
I'll take the defaults for the storage as well.

04:24.530 --> 04:30.020
We are attaching a 10GB general-purpose root volume with our EC2 instance.

04:30.320 --> 04:34.130
Let's quickly review some of the important details that we have configured so far.

04:34.950 --> 04:36.900
We want to create one EC2 instance.

04:37.650 --> 04:40.810
We are making use of the Amazon Linux 2 kernel 5.10.

04:40.830 --> 04:46.770
AMI (Amazon Machine Image) is nothing but the operating system and the applications that you would want on your EC2 instance.

04:46.770 --> 04:47.720
We chose the instance type as t2.micro. Instance type helps you in choosing what kind of hardware you'd want for your EC2 instance, how many vCPUs you would want, how much memory you would want, what kind of I/O speed you would want.

05:00.390 --> 05:03.150
You can choose all that by choosing the instance type.

05:03.780 --> 05:06.330
The next thing we configured is a security group.

05:06.330 --> 05:07.860
A security group is a firewall that controls what traffic is allowed into your EC2 instance and what traffic can go outside your EC2 instance.

05:15.330 --> 05:18.570
We also attached a root volume of size 1GB.

05:19.110 --> 05:20.970
Let's go ahead and launch this instance.

05:23.850 --> 05:28.590
You can see that it says "successfully initiated the launch" of this specific instance.

05:28.800 --> 05:32.010
What I can do is click on that specific instance here.

05:32.010 --> 05:33.180
So when I click that,

05:34.920 --> 05:39.060
a new page would open up where I'll be able to see that specific instance.

05:39.150 --> 05:43.170
Right now, you can see that the instance state is pending.

05:44.220 --> 05:48.990
If you give it a few minutes, you would see that the instance state would shift to running.

05:49.590 --> 05:54.690
Now, what I would want to do is connect to this EC2 instance and execute a few commands against it.

05:54.690 --> 05:57.630
How can I do that?

05:59.280 --> 06:02.970
That's where you can select this, and you can click Connect.

06:03.730 --> 06:05.800
There are multiple approaches to connecting to your EC2 instance.

06:05.800 --> 06:09.700
To connect to an EC2 instance, we'll make use of EC2 Instance Connect.

06:12.350 --> 06:18.380
The default username is ec2-user, so you can take the default username and say connect.

06:19.670 --> 06:25.610
And within a little while, you should see that a new tab opens up where you can go ahead and type in a few commands.

06:25.610 --> 06:26.630
I'll go in here and type in "who am I?".

06:28.020 --> 06:29.420
"Who am I?"

06:29.430 --> 06:30.840
ec2-user.

06:34.140 --> 06:39.120
I can go in and type in "python --version".

06:39.510 --> 06:46.230
You can see that Python 2.7.18 is already installed on this specific EC2 instance. If you want, you can go ahead and install any software that you would want on this.

06:48.720 --> 06:49.350
Easy to install.

06:49.380 --> 06:54.600
For example, if you want to install Java or Node.js, or if you want to install Go, you can go ahead and install it on this specific EC2 instance.

06:58.260 --> 07:02.310
One of the most important things that you need to understand is the power of what you are doing right now.

07:02.310 --> 07:02.850
Now,

07:05.130 --> 07:06.870
with a click of a few buttons,

07:06.870 --> 07:13.560
we were able to launch a virtual server, and we were able to very easily connect to it.

07:13.560 --> 07:19.020
We are now able to execute commands, and if we want, we can go ahead and install software in it and play with it.

07:19.020 --> 07:19.800
That's the power of the cloud.

07:21.860 --> 07:23.420
You can get access to powerful infrastructure with a click of a few buttons.

07:30.590 --> 07:35.120
Let's close this window and go back to our EC2 instance.

07:35.240 --> 07:39.170
So, I'll navigate back to the EC2 instances page and you can see our instance running here.

07:39.170 --> 07:43.850
If I click on the instance ID, I can view all the details about this EC2 instance.

07:44.890 --> 07:48.190
You can see that this EC2 instance has an instance ID, which is used to uniquely identify it.

07:48.430 --> 07:51.490
The EC2 instance is also assigned a public IP address by default.

07:51.700 --> 07:54.190
This public IP address can be used to access any application installed on this instance.

07:55.660 --> 07:59.820
Additionally, the EC2 instance is also assigned a private IP address that is only available within the network in which the instance is created.

07:59.830 --> 08:04.960
If you want to access the instance outside the network, you would need to configure port forwarding or use a VPN.

08:18.280 --> 08:21.340
You can see that the current state of the instance is running.

08:22.350 --> 08:25.590
You can also see that the instance type of this is t2.micro.

08:26.130 --> 08:30.180
Now, there are a number of operations that you can perform on your instance.

08:30.210 --> 08:34.380
If you go to Instance State, you can stop the instance.

08:34.920 --> 08:40.350
You can reboot the instance, basically restart the instance, or you can terminate the instance.

08:40.440 --> 08:43.500
Stopping the instance would only temporarily stop the instance.

08:43.990 --> 08:48.990
You can go ahead and start it at a later point in time, but if you terminate the instance, the instance
will be completely deleted.

08:48.990 --> 08:50.490
You will not be able to restart it again.

08:53.770 --> 08:57.980
If you scroll down here, you will be able to see a lot more details about the EC2 instance.

08:58.000 --> 09:00.400
You can see that we are making use of Amazon Machine Image (AMI) on Linux.

09:00.400 --> 09:07.900
You can see the AMI ID or we can see the AMI ID, or the RMS on-machine image ID that we are making use of.

09:07.900 --> 09:08.290
of.

09:08.770 --> 09:11.830
You can also see the key pair details and a lot of other details regarding this Easy2 instance.

09:11.830 --> 09:18.250
If you go over to Security, you'll be able to see the details of the security group that we have configured earlier.

09:18.250 --> 09:20.380
When creating the EC2 instance, we said we would want to have SSH traffic, and that's why you can see that the security group allows traffic on Port 22.

09:24.910 --> 09:27.190
If you go to Networking, you can see the networking details of this EC2 instance.

09:27.190 --> 09:30.250
You can see the public IP address, private IP address, and VPC and subnet details in here.

09:41.680 --> 09:46.420
VPCs and subnets allow you to create your own private network in the cloud.

09:46.510 --> 09:49.660
We'll talk about VPCs and subnets later in the course.

09:50.080 --> 09:55.570
If you go to storage over here, you can see that there is a hard disk or a virtual drive which is attached

09:55.570 --> 09:57.280
to your EC2 instance.

09:57.490 --> 10:02.680
When we created our EC2 instance, we chose to have a 1GB hard disk attached.

10:03.160 --> 10:07.030
You can see the details of it in the statistics.

10:07.030 --> 10:10.400
You can see the current status of your EC2 instance.

10:10.420 --> 10:13.840
You can see that all the system statistics are passing.

10:13.840 --> 10:17.290
And also, you can see that the instance statistics are also passing.

10:18.540 --> 10:24.120
If you go to monitoring, you can look at all the metrics related to our EC2 instance.

10:24.120 --> 10:28.620
You can see the CPU utilization, you can see the status of the status checks.

10:28.620 --> 10:33.850
You can see how much network traffic is coming in and going out.

10:33.870 --> 10:36.670
You can see the details of disk space.

10:36.690 --> 10:40.800
So if you want to look at metrics related to your EC2 instance, you can come to the monitoring

10:40.800 --> 10:45.570
tab. The service which tracks your metrics is CloudWatch.

10:45.870 --> 10:50.970
So what's happening is your EC2 instance would send all the metrics to CloudWatch, and these are

10:50.970 --> 10:56.940
the metrics you are seeing here. You can also attach tags with your EC2 instance.

10:56.940 --> 11:01.520
You can see that there is a tag which is already created named EC2 instance.

11:01.530 --> 11:04.320
What I would like to do is to add more tags.

11:04.320 --> 11:07.710
So I'll go to manage tags and I would like to add a new tag.

11:07.740 --> 11:15.090
I'll call this environment, and I'll add a tag called Environment and set it to "Dev". I'll also add a

11:15.090 --> 11:17.820
tag called Business Unit.

11:17.820 --> 11:19.980
Let's call this Business Unit A.

11:21.540 --> 11:26.370
Tags are really useful in associating a specific resource in the cloud with, let's say,

11:26.580 --> 11:28.590
an environment or a business unit.

11:29.390 --> 11:34.190
Whenever you are working for a large enterprise, you would want to be able to identify which resource belongs to which business unit or environment, so that you can associate costs with that specific environment or business unit.

11:41.630 --> 11:43.160
So let's go ahead and save this.

11:43.890 --> 11:46.680
In this step, we were able to create our first EC2 instance.

11:46.680 --> 11:48.750
We were able to connect to it using Instance Connect.

11:48.750 --> 11:53.280
We were able to execute a few commands against it and we saw that there are a lot of things that you can do with your EC2 instance.

11:56.010 --> 12:01.110
Before we end this step, what I would want to do is to terminate this specific EC2 instance in the cloud.

12:01.590 --> 12:04.800
You don't want to leave the resources running for a long time.

12:05.550 --> 12:10.240
The best practice in the cloud is to always terminate the resources after you use them.

12:10.260 --> 12:12.030
So what I'll do is I'll select this instance.

12:12.800 --> 12:16.250
I would go to Instance State and select 'Terminate instance.'

12:17.180 --> 12:19.010
Then, I would confirm the termination.

12:20.090 --> 12:22.930
The termination process for the EC2 instance will take some time.

12:22.940 --> 12:25.550
I recommend taking a break while the process completes.

12:25.580 --> 12:27.830
I will see you soon.

