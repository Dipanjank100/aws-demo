WEBVTT

00:00.950 --> 00:04.130
Welcome to the next demo on EC2.

00:05.590 --> 00:10.300
In this demo, let's create an EC2 instance and install a simple web server.

00:10.300 --> 00:15.460
On our EC2 instance, I'll launch a PC2 virtual server in the cloud.

00:16.360 --> 00:27.040
I'll go to our instances and select "Launch Instance", and I will call this my first web server.

00:28.960 --> 00:32.620
I'll take the defaults for AMI and instance type.

00:33.010 --> 00:35.770
I'll create a new security group as usual.

00:36.250 --> 00:42.010
The new security group will be configured to allow SSH traffic from everywhere, so we'll be able to access

00:42.010 --> 00:43.510
this instance.

00:44.720 --> 00:48.380
And I'll take the default storage that is assigned.

00:49.160 --> 00:55.400
So an Elastic Block Store volume of 8GB will be attached to our EC2 instance.

00:56.000 --> 00:58.820
The only additional thing I would need to do is to select the keypair.

00:59.060 --> 01:02.390
I would choose the same key pair, which we created in the last step.

01:02.390 --> 01:05.090
So I'll go ahead and choose "easy2-default".

01:07.280 --> 01:10.040
We are all set to launch our EC2 instance.

01:11.780 --> 01:16.640
You can see how easy it is to launch an EC2 instance in AWS.

01:17.800 --> 01:21.940
With a few clicks, you'll be able to provision powerful servers.

01:22.300 --> 01:24.400
Let's go and check the status of the instance.

01:26.770 --> 01:28.810
The instance state right now is "pending".

01:29.580 --> 01:31.440
Let's refresh.

01:31.890 --> 01:32.940
It's still pending.

01:33.030 --> 01:34.710
Let's give it a couple of minutes.

01:36.280 --> 01:37.320
Okay.

01:37.330 --> 01:38.240
It's now running.

01:38.260 --> 01:40.600
It took about 30 seconds, I would think.

01:40.720 --> 01:44.710
And now I can go ahead and select this instance and I can connect to it.

01:45.520 --> 01:50.740
Let's use easy to instance connect and let's connect to this specific instance.

01:52.150 --> 01:56.680
Now what we want to do in here is to install a simple web application.

01:57.340 --> 02:04.120
We will install something called the Apache Web server, and to be able to install Apache Web server,

02:04.120 --> 02:06.310
we need to become a superuser.

02:06.730 --> 02:10.330
The way we can become a superuser is by using the 'sudo' command.

02:11.570 --> 02:11.810
So...

02:11.810 --> 02:12.800
Type "sudo su".

02:12.800 --> 02:16.010
So, this is the command which will make us a super user.

02:17.500 --> 02:20.950
We are now becoming a super user, so we are becoming a root.

02:20.980 --> 02:25.750
Now, I can go ahead and install any software I want on my EC2 instance.

02:26.580 --> 02:29.820
To install software on any of the operating systems,

02:29.820 --> 02:33.690
typically we make use of package managers in Amazon.

02:33.810 --> 02:36.930
The recommended package manager is Yum.

02:37.260 --> 02:42.570
So, we'll be making use of Yum to install our software, our web server.

02:42.750 --> 02:47.610
Before we install the software, we need to make sure that Yum is updated.

02:47.700 --> 02:51.510
So, I'll say "yum update -y".

02:52.590 --> 02:57.060
If you're facing any problems with the commands or if you're finding it difficult to type these commands,

02:57.090 --> 03:01.230
These commands are also available in the previous lecture, so you can copy them from there and use them here as well.

03:01.230 --> 03:05.850
The command we are executing is "yum update -y".

03:06.330 --> 03:10.830
Now we are ready to install Apache using the command "yum install httpd".

03:11.910 --> 03:12.480
Great.

03:12.480 --> 03:14.320
It says "no packages marked for update".

03:14.340 --> 03:15.300
That's wonderful.

03:15.330 --> 03:20.380
We are now ready to install Apache and the command to install Apache is "yum install httpd".

03:20.400 --> 03:21.010
Press enter to execute the command.

03:30.330 --> 03:31.830
It's asking if it's okay to install, so just type "y" for yes.

03:31.830 --> 03:32.810
Let's go ahead and install.

03:32.820 --> 03:33.870
I'll say yes.

03:36.650 --> 03:37.820
This is pretty quick.

03:37.820 --> 03:40.370
So we have our web server installed in here.

03:40.400 --> 03:41.960
Let's start it up.

03:42.440 --> 03:49.880
The way you can start it up is by using something called systemctl start httpd.

03:49.940 --> 03:51.020
httpd.

03:52.120 --> 03:55.780
So systemctl start httpd.

03:55.810 --> 03:58.420
That's what we are doing in here.

04:00.100 --> 04:01.090
Let's play center.

04:01.480 --> 04:03.850
Apache web server is now started up.

04:05.630 --> 04:08.660
Now we want to see what's happening with it.

04:09.170 --> 04:11.360
How do I access the web application?

04:11.960 --> 04:14.180
I can go back to the management console.

04:14.540 --> 04:16.930
I'll go to instances right now.

04:16.940 --> 04:23.000
You should have just one instance running, so I'll go in there and I want the public IP address.

04:23.120 --> 04:26.270
What I'll do is I'll copy the public IP address.

04:26.300 --> 04:30.430
I'll copy this and paste it into the browser.

04:30.440 --> 04:32.870
So 31.151.192. I'll paste it in and I'll press enter.

04:36.380 --> 04:37.310
Oops.

04:37.340 --> 04:38.840
Nothing is happening here.

04:38.840 --> 04:40.040
It's just hanging.

04:40.310 --> 04:45.410
Why are we not able to access our web application which is installed on our EC2 instance?

04:45.800 --> 04:48.350
Earlier we talked about the security group.

04:48.590 --> 04:55.040
A security group is a virtual firewall that sits right before your EC2 instance.

04:55.250 --> 04:58.330
Let's check the rules that are configured for our security group.

04:58.340 --> 05:00.620
I'll go to the security group for our EC2 instance.

05:00.920 --> 05:03.650
This is the security group that we are making use of.

05:03.650 --> 05:10.700
And right now, in the inbound rules, we are only allowing access on port 22.

05:10.730 --> 05:19.430
Port 22 is the SSH port because as such, it's allowed and we were able to connect using SSH to our instance.

05:19.910 --> 05:23.480
But right now, we are not allowing HTTP traffic.

05:23.720 --> 05:25.520
How can we allow HTTP traffic?

05:26.970 --> 05:29.040
We can change the security group.

05:29.040 --> 05:32.190
So I'll go and click on the security group, which is present here.

05:32.520 --> 05:34.530
This will take you to the security group.

05:34.770 --> 05:40.620
And if I go over to the inbound rules, I can edit inbound rules.

05:41.400 --> 05:45.840
Right now, the only inbound access allowed is SSH.

05:46.020 --> 05:48.390
What we want to do is add another rule.

05:48.690 --> 05:49.890
I want to have HTTP.

05:51.370 --> 05:53.620
HTTP.

05:53.770 --> 05:56.400
So we don't have HTTP access.

05:56.410 --> 06:01.180
We don't have access to our web application, which is running on Port 80.

06:01.870 --> 06:04.450
And I would want to allow it from everywhere.

06:04.540 --> 06:09.610
So I will choose "Anywhere" from 0.0.0.0/0.

06:09.640 --> 06:16.840
This means allow from everywhere, and I'll save the rules. Now, if I go back to my EC2 instance.

06:16.840 --> 06:22.000
So let's go to the EC2 instance and let's pick up the public IP address for this.

06:22.300 --> 06:25.060
Let's pick up this and...

06:25.910 --> 06:30.240
You can type in 31.151.192. Yours might have a different value.

06:30.260 --> 06:31.760
Go ahead and type it in and press enter.

06:34.160 --> 06:36.410
You should see this page come up.

06:36.830 --> 06:43.130
If you are reading this page, it means that Apache HTTP server is installed on this site and it's working properly.

06:45.050 --> 06:46.460
Congratulations!

06:47.290 --> 06:51.520
If you have any problems, make sure that you have modified the right security group.

06:51.520 --> 06:56.620
So go to your instance and inside the instance, go to Security Groups.

06:57.040 --> 07:00.280
And if you go over to your security group...

07:01.630 --> 07:04.450
Now look at your inbound rules.

07:04.960 --> 07:09.310
You should see a rule which allows HTTP access from everywhere.

07:09.340 --> 07:16.180
You can edit inbound rules and confirm that HTTP access from everywhere is allowed.

07:16.300 --> 07:18.650
Currently, we have installed Apache HTTP server.

07:18.670 --> 07:24.160
If you want to install other software like Java or Node.js, you can do so in a similar way.

07:24.160 --> 07:25.300
However, imagine setting up multiple EC2 instances like this.

07:25.750 --> 07:29.710
It would be a little tedious, wouldn't it?

07:32.350 --> 07:33.550
I would have to connect to each EC2 instance, install the required software, and make sure the application is up and running.

07:33.550 --> 07:38.770
That's a lot of work.

07:41.350 --> 07:42.730
How can we simplify this?

07:43.060 --> 07:46.630
We will explore various solutions as we go further in the course.

07:47.260 --> 07:50.230
I hope you're enjoying the course, and I'll see you in the next step.

